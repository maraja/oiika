swagger: "2.0"
info:
  version: "0.0.1"
  title: Hello World App
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:

# LOGIN

  '/login':
    x-swagger-router-controller: auth
    post:
      description: login local user
      operationId: loginLocal
      tags:
        - login
      parameters:
          - name: login
            in: body
            required: true
            schema:
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/HelloWorldResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

# SIGNUP

  '/signup':
    x-swagger-router-controller: auth
    post:
      description: signup local user
      operationId: authLocal
      tags:
        - signup
      parameters:
          - name: signup
            in: body
            required: true
            schema:
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                gender:
                  type: string
                password:
                  type: string
                user_type:
                  type: string
              required:
                - first_name
                - last_name
                - email
                - password
                - user_type
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/HelloWorldResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"


# AUTH

  # '/auth':
  #   x-swagger-router-controller: auth
  #   post:
  #     description: auth local user
  #     operationId: authLocal
  #     tags:
  #       - auth
  #     parameters:
  #         - name: auth
  #           in: body
  #           required: true
  #           schema:
  #             properties:
  #               first_name:
  #                 type: string
  #               last_name:
  #                 type: string
  #               email:
  #                 type: string
  #               gender:
  #                 type: string
  #               password:
  #                 type: string
  #               user_type:
  #                 type: string
  #               location_lat:
  #                 type: number
  #               location_lng:
  #                 type: number
  #             required:
  #               - first_name
  #               - last_name
  #               - email
  #               - password
  #               - user_type
  #     responses:
  #       "200":
  #         description: Success
  #         schema:
  #           $ref: "#/definitions/HelloWorldResponse"
  #       default:
  #         description: Error
  #         schema:
  #           $ref: "#/definitions/ErrorResponse"

  '/auth/facebook':
    x-swagger-router-controller: auth
    post:
      description: auth facebook user
      operationId: authFacebook
      tags:
        - auth
      parameters:
          - name: auth
            in: body
            required: true
            schema:
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                facebook_id:
                  type: string
                gender:
                  type: string
                profile_picture:
                  type: string
                user_type:
                  type: string
                location_lat:
                  type: number
                location_lng:
                  type: number
              required:
                - first_name
                - last_name
                - email
                - facebook_id
                - user_type
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/HelloWorldResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  '/auth/google':
    x-swagger-router-controller: auth
    post:
      description: auth google user
      operationId: authGoogle
      tags:
        - auth
      parameters:
          - name: auth
            in: body
            required: true
            schema:
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                google_id:
                  type: string
                gender:
                  type: string
                profile_picture:
                  type: string
                user_type:
                  type: string
                location_lat:
                  type: number
                location_lng:
                  type: number
              required:
                - first_name
                - last_name
                - email
                - google_id
                - user_type
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/HelloWorldResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  '/remove-account/{accountId}':
    x-swagger-router-controller: auth
    delete:
      description: remove account by accountId
      operationId: removeAccount
      tags:
        - auth
      parameters:
          - name: accountId
            in: path
            required: true
            type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/HelloWorldResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

# SEARCH

  # GET search tutors based on GPS co-ordinates
  '/search':
    x-swagger-router-controller: search
    get:
      description: Get tutors by location
      operationId: getTutorsByLocation
      tags:
        - Tutor
      parameters:
          - name: sw_lat
            in: query
            description: SouthWest latitude of location
            required: true
            type: string
          - name: sw_lng
            in: query
            description: SouthWest longitude of location
            required: true
            type: string
          - name: ne_lat
            in: query
            description: NorthEast latitude of location
            required: true
            type: number
          - name: ne_lng
            in: query
            description: NorthEast longitude of location
            required: true
            type: number
      responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/HelloWorldResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"

# TUTOR

  # Get tutor profile info - GET
  '/tutor/{tutorId}':
    x-swagger-router-controller: tutor
    get:
      description: get tutor profile information
      operationId: getTutorByAccountId
      tags:
        - Tutor
      parameters:
          -
            name: tutorId
            in: path
            required: true
            type: string
      responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/HelloWorldResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"

  # Get tutor reviews - GET
  '/tutor/{tutorId}/reviews':
    x-swagger-router-controller: reviews
    get:
      description: get tutor reviews
      operationId: getTutorReviewsByAccountId
      tags:
        - Tutor
      parameters:
          -
            name: tutorId
            in: path
            required: true
            type: string
      responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/HelloWorldResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"

  # Get tutor schedule - GET
  '/tutor/{tutorId}/schedule':
    x-swagger-router-controller: schedules
    get:
      description: get tutor schedule returned in a JSON object with days arrays
      operationId: getTutorScheduleByAccountId
      tags:
        - Tutor
      parameters:
          -
            name: tutorId
            in: path
            required: true
            type: string
      responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/HelloWorldResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"

  # GET all tutor sessions by account ID
  '/tutor/{tutorId}/sessions':
    x-swagger-router-controller: sessions
    get:
      description: Get sessions belonging to tutor account id.
      operationId: getTutorSessionsByAccountId
      tags:
        - Session
      parameters:
          - name: tutorId
            in: path
            description: account ID of tutor
            required: true
            type: string
      responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/HelloWorldResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"

  # Update tutor schedule - PUT
  '/tutor/update-schedule':
    x-swagger-router-controller: schedules
    put:
      description: update tutor schedule
      operationId: updateTutorSchedule
      tags:
        - Tutor
      parameters:
          - name: schedule
            in: body
            required: true
            schema:
              properties:
                tutorId:
                  type: string
                  description: account id of tutor
                schedule:
                  type: object
                  description: object of schedules
                  required:
                  - "0"
                  - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                  - "6"
                  properties:
                    0:
                      type: array
                      items:
                        type: string
                    1:
                      type: array
                      items:
                        type: string
                    2:
                      type: array
                      items:
                        type: string
                    3:
                      type: array
                      items:
                        type: string
                    4:
                      type: array
                      items:
                        type: string
                    5:
                      type: array
                      items:
                        type: string
                    6:
                      type: array
                      items:
                        type: string
              required:
                - tutorId
                - schedule
      responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/HelloWorldResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"

  # Update tutor location - PUT
  '/tutor/update-location':
    x-swagger-router-controller: tutor
    put:
      description: update tutor location
      operationId: updateTutorLocation
      tags:
        - Tutor
      parameters:
          - name: location
            in: body
            required: true
            schema:
              properties:
                tutorId:
                  type: string
                  description: account id of tutor
                location:
                  type: object
                  description: object of location
                  required:
                  - lat
                  - lng
                  properties:
                    lat:
                      type: number
                    lng:
                      type: number
              required:
                - tutorId
                - location
      responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/HelloWorldResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"

  # Update tutor schedule exceptions - POST
  '/tutor/schedule-exceptions':
    x-swagger-router-controller: schedules
    post:
      description: update tutor schedule exceptions
      operationId: updateScheduleExceptions
      tags:
        - Tutor
      parameters:
          - name: scheduleExceptions
            in: body
            required: true
            schema:
              properties:
                tutorId:
                  type: string
                  description: account id of tutor
                exceptions:
                  type: array
                  items:
                    type: object
                    required:
                    - date
                    - all_day
                    - timeslots
                    properties:
                      date:
                        type: string
                        description: beginning datetime of exception
                      all_day:
                        type: boolean
                        description: all day flag
                      timeslots:
                        type: array
                        items:
                          type: string
                          description: slots of time that should be occupied by the exception.
              required:
                - exceptions
                - tutorId
      responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/HelloWorldResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"

# TUTEE

  # POST a new review created by a tutee
  '/tutee/review':
    x-swagger-router-controller: reviews
    post:
      description: Get sessions belonging to tutor email.
      operationId: createReview
      tags:
        - Session
      parameters:
          - name: review
            in: body
            required: true
            schema:
              properties:
                tutorId:
                  type: string
                  description: account id of tutor
                tuteeId: 
                  type: string
                  description: account id of tutee
                text:
                  type: string
                rating:
                  type: number
                date:
                  type: string
              required:
                - tutorId
                - tuteeId
                - text
                - rating
                - date
      responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/HelloWorldResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"

  # GET all tutee sessions by account ID
  '/tutee/{tuteeId}/sessions':
    x-swagger-router-controller: sessions
    get:
      description: Get sessions belonging to tutee account id.
      operationId: getTuteeSessionsByAccountId
      tags:
        - Session
      parameters:
          - name: tuteeId
            in: path
            description: account ID of tutee
            required: true
            type: string
      responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/HelloWorldResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"

  # POST a new session created by a tutee
  '/tutee/session':
    x-swagger-router-controller: sessions
    post:
      description: create new session
      operationId: createSession
      tags:
        - Session
      parameters:
          - name: session
            in: body
            required: true
            schema:
              properties:
                tuteeId:
                  type: string
                  description: account id of tutee
                tutorId:
                  type: string
                  description: account id of tutor
                subjectName:
                  type: string
                  description: name of tutored subject
                subjectLevel:
                  type: number
                  description: level of tutored subject
                hourly_rate:
                  type: number
                  description: hourly rate of session
                date:
                  type: string
                  description: date time of session
                timeslots:
                  type: array
                  items:
                    type: string
              required:
                - tuteeId
                - tutorId
                - subjectName
                - subjectLevel
                - hourly_rate
                - date
                - timeslots

      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/HelloWorldResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"


# SUBJECTS

  # POST a new subject by an admin (for now)
  '/subject':
    x-swagger-router-controller: subjects
    post:
      description: Create new subject
      operationId: createSubject
      tags:
        - Subject
      parameters:
          - name: subject
            in: body
            required: true
            schema:
              properties:
                name:
                  type: string
                  description: name of subject
                level: 
                  type: number
                  description: level of subject
              required:
                - name
                - level
      responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/HelloWorldResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"

  # GET all subjects
  '/subjects':
    x-swagger-router-controller: subjects
    get:
      description: get all subjects
      operationId: getAllSubjects
      tags:
        - Subject
      responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/HelloWorldResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"

  # GET all subjects by partial or full string
  '/subjects/{subjectName}':
    x-swagger-router-controller: subjects
    get:
      description: get all subjects by a partial name string
      operationId: getSubjectsByName
      tags:
        - Subject
      parameters:
          -
            name: subjectName
            in: path
            required: true
            type: string
      responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/HelloWorldResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"

  # GET all subjects by level
  '/subjects/level/{subjectLevel}':
    x-swagger-router-controller: subjects
    get:
      description: get all subjects by level
      operationId: getSubjectsByLevel
      tags:
        - Subject
      parameters:
          -
            name: subjectLevel
            in: path
            required: true
            type: number
      responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/HelloWorldResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"


# SKILLS

  # POST a new skill from admin (for now)
  '/skill':
    x-swagger-router-controller: skills
    post:
      description: Create new skill
      operationId: createSkill
      tags:
        - Skill
      parameters:
          - name: skill
            in: body
            required: true
            schema:
              properties:
                name:
                  type: string
                  description: name of skill to be added
              required:
                - name
      responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/HelloWorldResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"

  # POST a new subskill
  '/subskill':
    x-swagger-router-controller: skills
    post:
      description: Create new subskill
      operationId: createSubskill
      tags:
        - Skill
      parameters:
          - name: skill
            in: body
            required: true
            schema:
              properties:
                name:
                  type: string
                  description: name of skill
                subskill:
                  type: string
                  description: name of subskill to be added
              required:
                - name
                - subskill
      responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/HelloWorldResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"


  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  SearchErrorResponse:
    required:
      - message
      - code
    properties:
      message:
        type: string
      code:
        type: string
