swagger: "2.0"
info:
  version: "1.0.0"
  title: PitStop API Server
# during dev, should point to your local machine
host: localhost:10010
basePath: /
schemes:
  # tip: remove http to make production-grade
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  '/login':
    x-swagger-router-controller: auth
    post:
      description: login with username and password
      operationId: passwordAuth
      tags:
        - Auth
      parameters:
        -
          name: credentials
          in: body
          required: true
          description: username and password
          schema:
            properties:
              username:
                type: string
              password:
                type: string
                description: raw password with length of 8 to 55 chars
              installationId:
                type: string
            required:
              - username
              - password

      responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/HelloWorldResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  '/login/social':
    x-swagger-router-controller: auth
    post:
      description: login with social identifier
      operationId: socialAuth
      tags:
        - Auth
      parameters:
        -
          name: credentials
          in: body
          required: true
          description: username and password
          schema:
            properties:
              accessToken:
                type: string
                description: access token from auth provider
              provider:
                type: string
                description: name of supported providers ,e.g. facebook
              installationId:
                type: string
            required:
              - accessToken
              - provider

      responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/HelloWorldResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  '/login/legacy':
    x-swagger-router-controller: auth
    post:
      description: login with Parse auth data
      operationId: legacyAuth
      tags:
        - Auth
      parameters:
        -
          name: credentials
          in: body
          required: true
          description: Parse userId and session token
          schema:
            properties:
              userId:
                type: string
                description: objectId of user in Parse
              sessionToken:
                type: string
                description: token of existing session
              installationId:
                type: string
            required:
              - userId
              - sessionToken

      responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/HelloWorldResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  '/login/resetPassword':
    x-swagger-router-controller: auth
    post:
      description: reset password by giving email
      operationId: resetPasswordRequestHandler
      tags:
        - Auth
      parameters:
        -
          name: payload
          in: body
          required: true
          schema:
            properties:
              email:
                type: string
                description: email of user to reset password
            required:
              - email
      responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/HelloWorldResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  '/login/resetPassword/success':
    x-swagger-router-controller: auth
    post:
      description: success callback handler of password reset request
      operationId: resetPasswordSuccessHandler
      tags:
        - Auth
      parameters:
        -
          name: payload
          in: body
          required: true
          schema:
            properties:
              email:
                type: string
                description: email of user to reset password
              password:
                type: string
                description: new raw password
              resetPasswordApiKey:
                type: string
                description: api key for auth0 to verify sender of requset
            required:
              - email
              - password
              - resetPasswordApiKey
      responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/HelloWorldResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  '/login/refresh':
    x-swagger-router-controller: auth
    post:
      description: get access token by refresh token
      operationId: getAccessTokenByRefreshToken
      tags:
        - Auth
      parameters:
        -
          name: payload
          in: body
          required: true
          schema:
            properties:
              refreshToken:
                type: string
                description: the refresh token generated upon login event
            required:
              - refreshToken
      responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/HelloWorldResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  '/car':
    x-swagger-router-controller: car
    get:
      description: get id and VIN of car by VIN
      operationId: getCarByVinOrUser
      tags:
        - Car
    #   security:
    #     - jwt:
    #       - all
      parameters:
          -
            name: vin
            in: query
            description: VIN of car
            required: false
            type: string
          -
            name: userId
            in: query
            description: user id
            required: false
            type: number
      responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/HelloWorldResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
    post:
      description: create new car
      operationId: createCar
      tags:
        - Car
      parameters:
          - name: car
            in: body
            required: true
            schema:
              properties:
                vin:
                  type: string
                baseMileage:
                  type: number
                  description: starting mileage
                userId:
                  type: number
                scannerId:
                  type: string
                shopId:
                  type: number
              required:
                - vin
                - baseMileage
                - userId
      responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/HelloWorldResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
    put:
      description: update old car
      operationId: updateCar
      tags:
        - Car
      parameters:
          - name: car
            in: body
            required: true
            schema:
              properties:
                carId:
                  type: number
                shopId:
                  type: number
                totalMileage:
                  type: number
                  description: new mileage
              required:
                - carId
      responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/HelloWorldResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  '/car/{carId}':
    x-swagger-router-controller: car
    get:
      description: get id and VIN of car by VIN
      operationId: getCarById
      tags:
        - Car
      parameters:
          -
            name: carId
            in: path
            required: true
            type: number
      responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/HelloWorldResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  '/shop':
    x-swagger-router-controller: shop
    get:
      description: Returns shops to the caller
      operationId: getShops
      tags:
        - Shop
      responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/HelloWorldResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  '/user':
      x-swagger-router-controller: user
      post:
        description: create new user
        operationId: createUser
        tags:
          - User
        parameters:
            - name: user
              in: body
              required: true
              schema:
                properties:
                  firstName:
                    type: string
                  lastName:
                    type: string
                  email:
                    type: string
                  username:
                    type: string
                  phone:
                    type: string
                  password:
                    type: string
                  authData:
                    type: string
                  facebookId:
                    type: string
                  isSocial:
                    type: boolean
                  installationId:
                    type: string
                required:
                  - firstName
                  - email
                  - username
        responses:
            "200":
              description: Success
              schema:
                $ref: "#/definitions/HelloWorldResponse"
            default:
              description: Error
              schema:
                $ref: "#/definitions/ErrorResponse"
      put:
        description: update user
        operationId: updateUser
        tags:
          - User
        parameters:
            - name: user
              in: body
              required: true
              schema:
                properties:
                  userId:
                    type: number
                  firstName:
                    type: string
                  lastName:
                    type: string
                  phone:
                    type: string
                  email:
                    type: string
                  activated:
                    type: boolean
                required:
                  - userId
        responses:
            "200":
              description: Success
              schema:
                $ref: "#/definitions/HelloWorldResponse"
            default:
              description: Error
              schema:
                $ref: "#/definitions/ErrorResponse"
  '/user/{userId}':
      x-swagger-router-controller: user
      get:
        description: Returns user to the caller
        operationId: getUserById
        tags:
          - User
        parameters:
            -
                name: userId
                in: path
                required: true
                type: number
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/HelloWorldResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  '/user/{userId}/settings':
    x-swagger-router-controller: user
    put:
      description: Returns user to the caller
      operationId: updateUserSettings
      tags:
        - User
      parameters:
        -
          name: userId
          in: path
          required: true
          type: number
        -
          name: settings
          in: body
          required: true
          schema:
            properties:
              settings:
                type: object
            required:
              - settings
      responses:
            "200":
              description: Success
              schema:
                $ref: "#/definitions/HelloWorldResponse"
            default:
              description: Error
              schema:
                $ref: "#/definitions/ErrorResponse"
  '/issue':
      x-swagger-router-controller: issue
      post:
        description: create new issue
        operationId: createIssue
        tags:
          - Service
        parameters:
            - name: issue
              in: body
              required: true
              schema:
                properties:
                  carId:
                    type: number
                  scannerId:
                    type: string
                  issueType:
                    type: string
                  data:
                    type: object
                required:
                  - issueType
        responses:
            "200":
              description: Success
              schema:
                $ref: "#/definitions/HelloWorldResponse"
            default:
              description: Error
              schema:
                $ref: "#/definitions/ErrorResponse"
      put:
        description: update car service issue
        operationId: updateIssue
        tags:
          - Service
        parameters:
            - name: issue
              in: body
              required: true
              schema:
                properties:
                    # NOTE: add field for symptoms here
                  issueId:
                    type: number
                  status:
                    type: string
                    description: status of service
                  carId:
                    type: number
                    description: new mileage
                  daysAgo:
                    type: number
                    description: when the user completed service (in days)
                  mileage:
                    type: number
                    description: mileage service was done at
                required:
                  - issueId
                  - status
        responses:
            "200":
              description: Success
              schema:
                $ref: "#/definitions/HelloWorldResponse"
            default:
              description: Error
              schema:
                $ref: "#/definitions/ErrorResponse"
  '/shop/{shopId}':
      x-swagger-router-controller: shop
      get:
        description: Returns shop to the caller
        operationId: getShopById
        tags:
          - Shop
        parameters:
            -
                name: shopId
                in: path
                required: true
                type: number
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/HelloWorldResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
#   '/installation':
#       x-swagger-router-controller: installation
#       post:
#         description: create new installation record
#         operationId: createInstallation
#         parameters:
#             - name: installation
#               in: body
#               required: true
#               schema:
#                 properties:
#                   updatedAt:
#                     type: string
#                   deviceToken:
#                     type: string
#                   pushType:
#                     type: string
#                   deviceType:
#                     type: string
#                   objectId:
#                     type: string
#                   createdAt:
#                     type: string
#                   localeIdentifier:
#                     type: string
#                   GCMSenderId:
#                     type: string
#                   badge:
#                     type: number
#                   parseVersion:
#                     type: string
#                   userId:
#                     type: number
#                   appIdentifier:
#                     type: string
#                   appName:
#                     type: string
#                   channels:
#                     type: string
#                   appVersion:
#                     type: string
#                   timeZone:
#                     type: string
#                 required:
# #                  - appIdentifier
# #                  - appName
# #                  - updatedAt
#                   - deviceType
#                   - objectId
#                   - deviceToken
#                   - pushType
#                   - appVersion
# #                  - timeZone
# #                  - createdAt
#         responses:
#             "200":
#               description: Success
#               schema:
#                 $ref: "#/definitions/HelloWorldResponse"
#             default:
#               description: Error
#               schema:
#                 $ref: "#/definitions/ErrorResponse"
  '/utility/serviceRequest':
      x-swagger-router-controller: utilities
      post:
        description: send service request email
        operationId: sendServiceRequest
        tags:
          - Service
        parameters:
          -
            name: request
            in: body
            required: true
            schema:
              properties:
                userId:
                  type: number
                carId:
                  type: number
                shopId:
                  type: number
                comments:
                  type: string
              required:
                - carId
                - shopId
                - userId
        responses:
            "200":
              description: Success
              schema:
                $ref: "#/definitions/HelloWorldResponse"
            default:
              description: Error
              schema:
                $ref: "#/definitions/ErrorResponse"
  '/utility/smooch':
      x-swagger-router-controller: utilities
      post:
        description: send smooch to respective dealership email
        operationId: sendSmoochEmail
        tags:
          - Utility
        parameters:
          -
            name: request
            in: body
            required: true
            schema:
              properties:
                appUser:
                  type: object
                messages:
                  type: array
                  items:
                    type: string
              required:
                - appUser
                - messages
        responses:
            "200":
              description: Success
              schema:
                $ref: "#/definitions/HelloWorldResponse"
            default:
              description: Error
              schema:
                $ref: "#/definitions/ErrorResponse"
  '/utility/pushService':
      x-swagger-router-controller: utilities
      post:
        description: send push message to devices
        operationId: sendPushNotification
        tags:
          - Utility
        parameters:
          -
            name: required
            in: body
            required: true
            schema:
              properties:
                userId:
                  type: number
                message:
                  type: string
              required:
                - userId
                - message
        responses:
            "200":
              description: Success
              schema:
                $ref: "#/definitions/HelloWorldResponse"
            default:
              description: Error
              schema:
                $ref: "#/definitions/ErrorResponse"
  '/scanner':
      x-swagger-router-controller: scanner
      get:
        description: get scanner by given query
        operationId: getScannerByScannerId
        tags:
          - Scan
        parameters:
          -
            name: scannerId
            in: query
            required: true
            type: string
          -
            name: active
            in: query
            required: true
            type: boolean
        responses:
            "200":
              description: Success
              schema:
                $ref: "#/definitions/HelloWorldResponse"
            default:
              description: Error
              schema:
                $ref: "#/definitions/ErrorResponse"
      put:
        description: UPSERT scanner in db
        operationId: updateScanner
        tags:
          - Scan
        parameters:
          -
            name: data
            in: body
            required: true
            schema:
              properties:
                carId:
                  type: number
                scannerId:
                  type: string
                  description: id set by factory
                isActive:
                  type: boolean
              required:
                - carId
                - scannerId
                - isActive
        responses:
            "200":
              description: Success
              schema:
                $ref: "#/definitions/HelloWorldResponse"
            default:
              description: Error
              schema:
                $ref: "#/definitions/ErrorResponse"
  '/scan/pids':
      x-swagger-router-controller: scan
      post:
        description: save pids
        operationId: savePids
        tags:
          - Scan
        parameters:
          -
            name: data
            in: body
            required: true
            schema:
              properties:
                tripId:
                  type: integer
                scannerId:
                  type: string
                pidArray:
                  type: array
                  items:
                    type: object
                    properties:
                      dataNum:
                        type: string
                      tripMileage:
                        type: number
                      calculatedMileage:
                        type: number
                      rtcTime:
                        type: number
                      pids:
                        type: array
                        items:
                          type: object
                        properties:
                          id:
                            type: string
                          data:
                            type: string
              required:
                - tripId
                - scannerId
                - pidArray
        responses:
            "200":
              description: Success
              schema:
                $ref: "#/definitions/HelloWorldResponse"
            default:
              description: Error
              schema:
                $ref: "#/definitions/ErrorResponse"
  '/scan/trip/{tripId}':
      x-swagger-router-controller: scan
      get:
        description: get trip by tripId
        operationId: getTripById
        tags:
          - Scan
        parameters:
          -
            name: tripId
            in: path
            required: true
            type: number
        responses:
            "200":
              description: Success
              schema:
                $ref: "#/definitions/HelloWorldResponse"
            default:
              description: Error
              schema:
                $ref: "#/definitions/ErrorResponse"
  '/scan/trip':
      x-swagger-router-controller: scan
      get:
        description: get trip by query string
        operationId: getTripByQuery
        tags:
          - Scan
        parameters:
          -
            name: scannerId
            in: query
            required: true
            type: string
          -
            name: latest
            in: query
            description: whether the server should return the latest trip
            required: false
            type: boolean
          -
            name: active
            in: query
            description: whether the server should return the active trip
            required: false
            type: boolean
        responses:
            "200":
              description: Success
              schema:
                $ref: "#/definitions/HelloWorldResponse"
            default:
              description: Error
              schema:
                $ref: "#/definitions/ErrorResponse"
      post:
        description: create trip
        operationId: createTrip
        tags:
          - Scan
        parameters:
          -
            name: params
            in: body
            required: true
            schema:
              properties:
                scannerId:
                  type: string
                tripId:
                  type: string
                rtcTimeStart:
                  type: integer
              required:
                - scannerId
                - rtcTimeStart
        responses:
            "200":
              description: Success
              schema:
                $ref: "#/definitions/HelloWorldResponse"
            default:
              description: Error
              schema:
                $ref: "#/definitions/ErrorResponse"
      put:
        description: update trip
        operationId: updateTrip
        tags:
          - Scan
        parameters:
          -
            name: params
            in: body
            required: true
            schema:
              properties:
                tripId:
                  type: integer
                mileage:
                  type: number
                rtcTimeEnd:
                  type: integer
                mileageStart:
                  type: number
              required:
                - tripId
        responses:
            "200":
              description: Success
              schema:
                $ref: "#/definitions/HelloWorldResponse"
            default:
              description: Error
              schema:
                $ref: "#/definitions/ErrorResponse"
#  '/scan/freezeData':
#        x-swagger-router-controller: scan
#        post:
#          description: save freeze data and issue
#          operationId: FreezeAndIssue
#          parameters:
#            -
#              name: data
#              in: body
#              required: true
#              schema:
#                properties:
#                  scannerId:
#                    type: string
#                  serviceType:
#                    type: string
#                  data:
#                    type: object
#                required:
#                  - scannerId
#                  - serviceType
#                  - data
#          responses:
#              "200":
#                description: Success
#                schema:
#                  $ref: "#/definitions/HelloWorldResponse"
#              default:
#                description: Error
#                schema:
#                  $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
securityDefinitions:
  jwt:
    type: oauth2
    authorizationUrl: /login
    flow: implicit
    scopes:
        all: all scopes
definitions:
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
